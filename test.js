console.log ('number'+3+3) 
// Ответ number33 - добавление происходит слева на право т.к первая идет строка, а  свойства бинарного плюса если есть строка то остальные данные будут преобразованы в строку

console.log (null+3)
// Ответ 3 посколько null конвертируется в 0

console.log(5 && "qwerty")
// Ответ qwerty - поскольку и 5 тру и qwerty тру, то выведет последнее значение тру

console.log (+'40' + +'2' + "hillel")

//Ответ  42hillel унарный плюс преобразует 40 и 2 в числа, бинарный плюс добавляет число и строку

console.log('10' - 5 === 6)

// Ответ false т.к 10 тут будет как число минус 5, т.к приоритет минуса выше чем присваивания, потом  потом идет строгое сравнение 5 и 6 без приведени типов

console.log (true + false)

// Ответ 1 идет прибавление с преобразованием типов  тоесть 1+ 0

console.log ('4px' - 3)

//Ответ  NaN - потому что строку 4рх не получится преобразовать в число это будет НАН, а любая операция с НАН возвращает НАН

console.log('4' - 3)

// Ответ 1 - потому что строку 4 получится преобразовать в число 4

console.log ('6' + 3 ** 0)

// Ответ 61 - потому что возведение в степень имеет больший приоритет чем прибавление, потом строку прибавляем к 1 и будет 61

console.log(12 / '6')

// Ответ 2 - т.к строка здесь приводится к числу

console.log ('10' + (5 === 6))

// Ответ 10false  - т.к при строгом равенстве 5 не равно 6, это false , потом строка '10' добавляет false

console.log (null == '')

// Ответ false - тюк при нестрогом сравнении null равен только undefind

console.log(3 ** (9 / 3))

// Ответ 27 - изначально операция в скобках, потом возведение в степень

console.log (!!'false' == !!'true')

// ответ true - потому что , строка false приводим к логическому значение это true ( потому что строка не пустая),
//  потом первый знак ! преобразует в false второй знак ! преобразует в true .аналогично и для второго выражения с "true"
//  В итоге мы имеем true==true ( тоесть 1==1) это true

console.log(0 || '0' && 1)

// ответ 1 - приоритет больше у логического И &&  вначале сравнивается строка '0' и 1 результат будет 1 ,
// т.к непустая строка это тру и 1 тоже тру, тоесть вернет последнее тру тоесть 1
// потом идет логическое ИЛИ ||  0 это фолс, 1 это тру - вернет последнее тру тоесть 1

console.log ((+null == false) < 1)

// ответ false - т.к преобразование +null это 0 и false тоже 0 , значит 0==0 это true. Потом true это 1 и оно не может быть больше  1 это фолс

console.log (false && true || true)

// Ответ true - приоритет && выше, значит первое выполняется false &&true будет false т.к первое ложное значение
// потом false || true  будет true т.к первое истинное значение


console.log (false && (false || true))

// ответ false - т.к выполняется то что в скобках ( приоритет выше) а потом оператор И

console.log ((+null == false) < 1 ** 5)

// ответ false т.к +null преобразовувает к числу 0==0 это тру, тру это 1 , 1 в 5 степени это 1 , 1 не больше 1 это фолс
